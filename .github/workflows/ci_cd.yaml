name: CI/CD Elixir

on:
  push:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    name: Compile with mix test, format & dialyzer
    env:
      MIX_ENV: test
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Setup Elixir
        id: setup-beam
        uses: erlef/setup-beam@v1.17.3
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Cache deps directory
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Get dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Compile code
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test --max-failures 1 --trace --warnings-as-errors

      - name: Check code is formatted
        run: mix format --check-formatted

      - name: Cache plt files
        uses: actions/cache@v4
        env:
          # TODO: Looks like the outputs.elixir-version part isn't working. 
          # Maybe needs to be explicitly defined somewhere?
          EX_OTP_VERSIONS: ${{ steps.setup-beam.outputs.elixir-version }}
          KEY_BASE: plt-${{ runner.os }}-${{ env.EX_OTP_VERSIONS }}
        with:
          path: |
            priv/plts
          key: |
            ${{ env.KEY_BASE }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ env.KEY_BASE }}-
      
      - name: Dialyzer static analysis
        run: mix dialyzer --format github

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused
  
  build-push:
    runs-on: ubuntu-latest
    needs: ci
    name: Build Docker image & push to ghcr.io
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/lcjtrifork/kanban
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=sha,format=short

      - name: Parse versions from .tool-versions
        id: parse-asdf
        run: ./scripts/versions.sh

      - name: Build and push image
        uses: docker/build-push-action@v5
        with: 
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            ELIXIR_VERSION=${{ env.ELIXIR_VERSION }}
            OTP_VERSION=${{ env.ERLANG_VERSION }}

